<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.server.mapper.BczbMapper">
    <insert id="saveBczbZh">
        merge into APP_ZB_BCZH  a using (select #{c1} id,#{c2} name,#{c3} bz,#{c4} userid from dual) b
        on (a.id=b.id)
        when not matched then
        insert (name,bz,userid,deptid,rkry,oilid,bbh) values (b.name,b.bz,b.userid,#{dwdm},#{userid},#{c5},#{c6})
        when matched then  update set a.name=b.name,a.bz=b.bz,a.userid=b.userid,oilid=#{c5},bbh=#{c6}
    </insert>
    <insert id="addZb2Fz_bak">
        BEGIN
        <foreach collection="list" item="record" index="index">
            update APP_OBJECT_BCZBTREE set zt=1 where id=#{record.OID};
            update APP_OBJECT_BCZBTREE set zt=zt+1 where id=#{record.PID};
            merge into APP_ZB_BCRALATION a using(select #{fzid} zhzbid,#{record.OID} bczbid from dual) b
            on (a.zhzbid=b.zhzbid and a.bczbid=b.bczbid)
            when not matched then
            insert (zhzbid,bczbid) values (b.zhzbid,b.bczbid)
            when matched then
            update set rksj=sysdate;
        </foreach>
        commit;
        END;
    </insert>

    <insert id="addZb2Fz">
        BEGIN
        <foreach collection="list" item="record" index="index">
            update APP_OBJECT_BCZBTREE set zt=1 where id=#{record.ID};
            update APP_OBJECT_BCZBTREE set zt=zt+1 where id=#{record.PID};
            merge into APP_ZB_BCRALATION a using(select #{fzid} zhzbid,#{record.ID} bczbid from dual) b
            on (a.zhzbid=b.zhzbid and a.bczbid=b.bczbid)
            when not matched then
            insert (zhzbid,bczbid) values (b.zhzbid,b.bczbid)
            when matched then
            update set rksj=sysdate;
        </foreach>
        commit;
        END;
    </insert>

    <insert id="delZb2Fz">
        BEGIN
        <foreach collection="list" item="record" index="index">
            update APP_OBJECT_BCZBTREE set zt=0 where id=#{record.ID};
            update APP_OBJECT_BCZBTREE set zt=zt-1 where id=#{record.PID};
            delete from APP_ZB_BCRALATION a where zhzbid=#{fzid} and bczbid=#{record.ID};
        </foreach>
        commit;
        END;
    </insert>
   <!-- 补充指标删除 -->
    <insert id="delBCZB">
        BEGIN
        <foreach collection="list" item="record" index="index">
            delete from APP_OBJECT_BCZBTREE where id=#{record.ID};
        </foreach>
        commit;
        END;
    </insert>
    <insert id="addZb2Ml">
        DECLARE
          v_id varchar2(50):='';
          v_code varchar2(100);
          v_count number(2):=0;
        BEGIN
        <foreach collection="list" item="record" index="index">
            select count(1) into v_count from APP_ZB_MLRALATION where zhzbid=#{fzid} and oilid=#{record.OILID};
            if v_count=0 then
                begin
                    select (max(code)+1) into v_code from sys_office where parent_id=#{fzid};
                    if v_code is null then select code||'001' into v_code from sys_office where id=#{fzid}; end if;
                    update APP_OBJECT_DWCBBCZB set zt=1 where id=#{record.ID};
                    select sys_guid() into v_id from dual;
                    insert into SYS_OFFICE(id,parent_id,name,code,type,USEABLE) values (v_id,#{fzid},#{record.P_MC},v_code,'9','1');
                    merge into APP_ZB_MLRALATION a using(select v_id zhzbid,#{record.ID} bczbid from dual) b
                    on (a.zhzbid=b.zhzbid and a.bczbid=b.bczbid)
                    when not matched then
                    insert (zhzbid,bczbid,code,oilid) values (b.zhzbid,b.bczbid,v_code,#{record.OILID})
                    when matched then
                    update set rksj=sysdate;
                end;
            end if;
        </foreach>
        commit;
        END;
    </insert>
    <insert id="addZb2Zb">
        DECLARE
        v_code varchar2(100);
        BEGIN
        <foreach collection="list" item="record" index="index">
            select code into v_code from sys_office where id=#{fzid};
            update APP_OBJECT_DWCBBCZB set zt=1 where id=#{record.ID};
            merge into APP_ZB_MLRALATION a using(select #{fzid} zhzbid,#{record.ID} bczbid from dual) b
            on (a.zhzbid=b.zhzbid and a.bczbid=b.bczbid)
            when not matched then
            insert (zhzbid,bczbid,code,oilid) values (b.zhzbid,b.bczbid,v_code,#{record.OILID})
            when matched then
            update set rksj=sysdate;
        </foreach>
        commit;
        END;
    </insert>
    <insert id="addZb2MlSbzc">
        DECLARE
        v_id varchar2(50):='';
        v_bcid varchar2(50):='';
        v_code varchar2(100);
        v_count number(2):=0;
        BEGIN
            select count(1) into v_count from APP_SBZC_MLRALATION where zhid=#{c4} and oilid=#{c13} and bbh=#{c21};
            if v_count=0 then
            begin
            select (max(code)+1) into v_code from APP_SBZC_ML where parent_id=#{c4} and bbh=#{c21};
            if v_code is null then select code||'0000000001' into v_code from APP_SBZC_ML where id=#{c4} and bbh=#{c21}; end if;
            select sys_guid() into v_id from dual;
            select sys_guid() into v_bcid from dual;
            insert into APP_SBZC_ML(id,parent_id,name,master,phone,fax,email,code,type,USEABLE,bbh) values (v_id,#{c4},#{c2},#{c14},#{c16},#{c3},#{c6},v_code,'10','1',#{c21});
            delete from APP_SBZC_MLRALATION where oilid=#{c13} and zhid=v_id and bbh=#{c21};
            merge into APP_SBZC_BC a using (select #{c1} ID,
                                                    #{c14} LB,
                                                    v_code BM,
                                                    #{c2} MC,
                                                    #{c5} CJMC,
                                                    #{c6} XH,
                                                    #{c3} PP,
                                                    #{c7} CCRQ,
                                                    #{c8} CCJG,
                                                    #{c15} GYJG,
                                                    #{c9} GYLY,
                                                    #{c13} OILID,
                                                    #{c10} GXSJ,
                                                     #{c11} LYSM,
                                                     #{c12} BZ,
                                                     #{c16} DW,
                                                     #{c21} BBH
                                                     from dual) b
            on (a.id=b.id and a.bbh=b.bbh)
            when matched then
            update set a.lb=b.lb,a.xh=b.xh,a.cjmc=b.cjmc,a.pp=b.pp,a.ccrq=b.ccrq,a.ccjg=b.ccjg,a.gyjg=b.gyjg,a.gyly=b.gyly,a.oilid=b.oilid,a.gxsj=b.gxsj,a.lysm=b.lysm,a.bz=b.bz,a.dw=b.dw
            when not matched then
            insert (ID,
                    LB,
                    BM,
                    MC,
                    XH,
                    CJMC,
                    PP,
                    CCRQ,
                    CCJG,
                    GYJG,
                    GYLY,
                    OILID,
                    GXSJ,DW,BBH
                    )values (v_bcid,
                                b.LB,
                                b.BM,
                                b.MC,
                                b.XH,
                                b.CJMC,
                                b.PP,
                                b.CCRQ,
                                b.CCJG,
                                b.GYJG,
                                b.GYLY,
                                b.OILID,
                                b.GXSJ,b.DW,b.BBH
                                );
            merge into APP_SBZC_MLRALATION a using(select v_id zhid,v_bcid bcid,#{c21} bbh from dual) b
            on (a.zhid=b.zhid and a.bcid=b.bcid and a.bbh=b.bbh)
            when not matched then
            insert (zhid,bcid,code,oilid,bbh) values (b.zhid,b.bcid,v_code,#{c13},b.bbh)
            when matched then
            update set rksj=sysdate;
            end;
            end if;
        commit;
        END;
    </insert>
    <insert id="addZb2ZbSbzc">
        DECLARE
        v_code varchar2(100);
        v_bcid varchar2(50);
        BEGIN
            select code into v_code from APP_SBZC_ML where id=#{c4} and bbh=#{c21};
            delete from APP_SBZC_MLRALATION where oilid=#{c13} and zhid=#{c4} and bbh=#{c21};
            select sys_guid() into v_bcid from dual;
            merge into APP_SBZC_BC a using (select #{c1} ID,
                                                    #{c14} LB,
                                                    v_code BM,
                                                    #{c2} MC,
                                                    #{c5} CJMC,
                                                    #{c6} XH,
                                                    #{c3} PP,
                                                    #{c7} CCRQ,
                                                    #{c8} CCJG,
                                                    #{c15} GYJG,
                                                    #{c9} GYLY,
                                                    #{c13} OILID,
                                                    #{c10} GXSJ,
                                                     #{c11} LYSM,
                                                     #{c12} BZ,
                                                     #{c16} DW,#{c21} BBH
                                                     from dual) b
            on (a.id=b.id and a.bbh=b.bbh)
            when matched then
            update set a.lb=b.lb,a.xh=b.xh,a.cjmc=b.cjmc,a.pp=b.pp,a.ccrq=b.ccrq,a.ccjg=b.ccjg,a.gyjg=b.gyjg,a.gyly=b.gyly,a.oilid=b.oilid,a.gxsj=b.gxsj,a.lysm=b.lysm,a.bz=b.bz,a.dw=b.dw,a.mc=b.mc
            when not matched then
            insert (ID,
                    LB,
                    BM,
                    MC,
                    XH,
                    CJMC,
                    PP,
                    CCRQ,
                    CCJG,
                    GYJG,
                    GYLY,
                    OILID,
                    GXSJ,DW,BBH
                    )values (v_bcid,
                                b.LB,
                                b.BM,
                                b.MC,
                                b.XH,
                                b.CJMC,
                                b.PP,
                                b.CCRQ,
                                b.CCJG,
                                b.GYJG,
                                b.GYLY,
                                b.OILID,
                                b.GXSJ,b.DW,B.BBH
                                );
            merge into APP_SBZC_MLRALATION a using(select #{c4} zhid,v_bcid bcid,#{c21} bbh  from dual) b
            on (a.zhid=b.zhid and a.bcid=b.bcid and a.bbh=b.bbh)
            when not matched then
            insert (zhid,bcid,code,oilid,bbh) values (b.zhid,b.bcid,v_code,#{c13},b.bbh)
            when matched then
            update set rksj=sysdate;
        commit;
        END;
    </insert>
    <insert id="addElf2Fz">
        DECLARE
        v_id varchar2(50):='';
        v_code varchar2(100);
        v_count number(2):=0;
        BEGIN
        <foreach collection="list" item="record" index="index">
            select count(1) into v_count from APP_ELF_MLRALATION where zhzbid=#{fzid};
            if v_count=0 then
            begin
            select (max(code)+1) into v_code from sys_office where parent_id=#{fzid};
            if v_code is null then select code||'001' into v_code from sys_office where id=#{fzid}; end if;
            update APP_OBJECT_YHBCELF set zt=1 where id=#{record.OID};
            select sys_guid() into v_id from dual;
            insert into SYS_OFFICE(id,parent_id,name,code,type,USEABLE) values (v_id,#{fzid},#{record.MC},v_code,'2','1');
            merge into APP_ELF_MLRALATION a using(select v_id zhzbid,#{record.OID} bczbid from dual) b
            on (a.zhzbid=b.zhzbid and a.bczbid=b.bczbid)
            when not matched then
            insert (zhzbid,bczbid,code) values (b.zhzbid,b.bczbid,v_code)
            when matched then
            update set rksj=sysdate;
            end;
            end if;
        </foreach>
        commit;
        END;
    </insert>
    <insert id="insertBczb1">
        insert into APP_OPROPERTY(OID,OKEY,OVALUE,ODEPTID) (
        <foreach collection="list" item="item"  index="index" separator="UNION ALL">
            select #{item.OID},#{item.OKEY},#{item.OVALUE},#{item.ODEPTID} from dual
        </foreach>
        )
    </insert>
    <insert id="insertBczb2">
        insert into APP_OBJECT_BCZBTREE(ID,PID,OTYPE,LB,DEPTID,USERID,OILID) (
        <foreach collection="list" item="item"  index="index" separator="UNION ALL">
            select #{item.ID},#{item.PID},#{item.OTYPE},#{item.LB},#{item.DEPTID},#{item.USERID},#{item.OILID} from dual
        </foreach>
        )
    </insert>
    <!-- 补全app_zbxx缺少字段 -->
    <insert id="bqzd">
		   declare
		   v_rowcount integer;
		   begin
		   select count(1) into v_rowcount from user_tab_columns
		   ${checksql};
		   if v_rowcount=0 then
		   execute immediate'${insertsql}';
		   end if;
		end;
    </insert>
<!--     <update id="changshi" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="(" separator="" close=")">
     DECLARE
        v_deptid number(4):=-1;
        v_count number(1):=0;
        v_infoid varchar2(50):='';
        v_cdxgc number(1):=0;
        v_cc number(16):=0;
         #{item}
		</foreach>
		
</update> -->
    <update id="mergeProject">
        DECLARE
        v_deptid number(4):=-1;
        v_count number(1):=0;
        v_infoid varchar2(50):='';
        v_cdxgc number(1):=0;
        v_cc number(16):=0;
        BEGIN
        ${sql}
        commit;
        end;
    </update>
    <update id="updateFzPath">
        update APP_ZB_BCZH set path=#{path},status='1' where id=#{id}
    </update>
    <update id="mergeProject3">
        DECLARE
        v_deptid number(4):=-1;
        v_count number(1):=0;
        v_infoid varchar2(50):='';
        v_cdxgc number(1):=0;
        BEGIN
        ${sql}
        commit;
        end;
    </update>
    <update id="mergeProject4">
        DECLARE
        v_deptid number(4):=-1;
        v_count number(1):=0;
        v_infoid varchar2(50):='';
        v_cdxgc number(1):=0;
        BEGIN
        ${sql}
        commit;
        end;
    </update>
    <update id="updSbzc">
        DECLARE
        v_code varchar2(100);
        v_id varchar2(50);
        BEGIN
            select zhid into v_id from APP_SBZC_MLRALATION where bcid=#{c1} and bbh=#{c21};
            delete from APP_SBZC_MLRALATION where oilid=#{c13} and zhid=v_id and bcid!=#{c1} and bbh=#{c21};
            merge into APP_SBZC_BC a using (select #{c1} ID,
                                                    #{c14} LB,
                                                    #{c2} MC,
                                                    #{c5} CJMC,
                                                    #{c6} XH,
                                                    #{c3} PP,
                                                    #{c7} CCRQ,
                                                    #{c8} CCJG,
                                                    #{c15} GYJG,
                                                    #{c9} GYLY,
                                                    #{c13} OILID,
                                                    #{c10} GXSJ,
                                                     #{c11} LYSM,
                                                     #{c12} BZ,
                                                     #{c16} DW,#{c21} BBH
                                                     from dual) b
            on (a.id=b.id and a.bbh=b.bbh)
            when matched then
            update set a.lb=b.lb,a.xh=b.xh,a.cjmc=b.cjmc,a.pp=b.pp,a.ccrq=b.ccrq,a.ccjg=b.ccjg,a.gyjg=b.gyjg,a.gyly=b.gyly,a.oilid=b.oilid,a.gxsj=b.gxsj,a.lysm=b.lysm,a.bz=b.bz,a.dw=b.dw,a.mc=b.mc;
        commit;
        END;
    </update>
    <update id="xfElf">
        insert into APP_XF (BBH,PATH,SUBMITTER,DEPTID,TYPE) values (SEQ_BCZBBB.nextval,#{path},#{userid},#{deptid},'2')
    </update>
    <update id="xfGcf">
        insert into APP_XF (BBH,PATH,SUBMITTER,DEPTID,TYPE) values (SEQ_BCZBBB.nextval,#{path},#{userid},#{deptid},'4')
    </update>
    <delete id="delFz">
        declare
          cursor cur_1 is
            select * from app_zb_bcralation where zhzbid = #{ID};
        begin
          delete from APP_ZB_BCZH where id=#{ID} and nvl(status,'')!='1';
          for c1 in cur_1 loop
            begin
              update APP_OBJECT_BCZBTREE set zt = 0 where id = c1.bczbid;
              update APP_OBJECT_BCZBTREE a
                 set zt = zt - 1
               where id =
                     (select pid from APP_OBJECT_BCZBTREE where id = c1.bczbid);
            end;
          end loop;
          delete app_zb_bcralation where zhzbid = #{ID};
          delete app_zb_bczh where id = #{ID};
          commit;
        end;
    </delete>
    <delete id="delZb2Ml">
        declare
        v_id varchar2(50):='';
        v_count number(3):=0;
        BEGIN
            select bczbid into v_id from APP_ZB_MLRALATION where zhzbid=#{fzid} and oilid=#{oilid};
            update APP_OBJECT_DWCBBCZB set zt=0 where id=v_id;
            delete from APP_ZB_MLRALATION a where zhzbid=#{fzid} and oilid=#{oilid};
            select count(1) into v_count from APP_ZB_MLRALATION where zhzbid=#{fzid};
            if v_count =0 then delete from sys_office where id=#{fzid}; end if;
        commit;
        END;
    </delete>
    <delete id="delSbzc2Ml">
        delete from app_sbzc_mlralation where bcid=#{bcid} and bbh=#{BBH}
    </delete>
    <delete id="delElf2Ml">
        declare
        v_id varchar2(50):='';
        v_count number(3):=0;
        BEGIN
            select bczbid into v_id from APP_ELF_MLRALATION where zhzbid=#{fzid};
            update APP_OBJECT_YHBCELF set zt=0 where id=v_id;
            delete from APP_ELF_MLRALATION a where zhzbid=#{fzid};
            select count(1) into v_count from APP_ELF_MLRALATION where zhzbid=#{fzid};
            if v_count =0 then delete from sys_office where id=#{fzid}; end if;
        commit;
        END;

    </delete>
    <delete id="delElf4Ml">
        delete from APP_ELF_MLRALATION where bczbid=#{c4}
    </delete>
    <delete id="delGcf4Ml">
        delete from APP_GCF_MLRALATION where bczbid=#{c4}
    </delete>
    <select id="getBczbProperty"   resultType="java.util.LinkedHashMap">
        with b as (select id
                 from APP_OBJECT_BCZBTREE
               connect by prior id = pid
                start with id = #{bczbid})
            select oid,
                   decode(okey, 'text', '#', '@') || okey okey,
                   nvl(ovalue, '') ovalue
              from APP_OPROPERTY a,b where a.oid=b.id
    </select>
    <select id="getBczbTreeById_bak"  resultType="java.util.LinkedHashMap">
        select * from (select a.*,b.ovalue oder from APP_OBJECT_BCZBTREE a left join
         (select * from APP_OPROPERTY where okey='ID') b on a.id=b.oid )
         connect by prior id=pid start with id=#{bczbid}
        order siblings by oder
    </select>
    <select id="getBczbTreeById"  resultType="java.util.LinkedHashMap">
        select * from APP_OBJECT_BCZBTREE
        connect by prior id=pid start with id=#{bczbid}
        order siblings by ord
    </select>
    <!--<select id="getBczbTreeById"  resultType="java.util.LinkedHashMap">
        select * from APP_OBJECT_BCZBTREE connect by prior id=pid start with id=#{bczbid}
        order siblings by oder
    </select>-->
    <select id="getOtherTest" resultType="java.util.LinkedHashMap">
        select * from APP_OBJTEST
    </select>
    <select id="getOtherTest2"  resultType="java.util.LinkedHashMap">
        select * from APP_OPROPERTY
    </select>
    <select id="getYsBczb_bak"  resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_BCZBTREE t
               where level = 3
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,username
        from app_oproperty a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'

    </select>
    <!--<select id="getYsBczb"  resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_BCZBTREE t
               where level = 3
                 and nvl(zt, 0) =0 ]]>
              connect by prior id = pid
               start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
            select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*
              from p
    </select>-->
    <select id="getYsBczb"  resultType="java.util.HashMap">
        WITH C AS
        (SELECT B.*
        FROM APP_OBJECT_BCZBTREE B,
        (SELECT * FROM APP_OBJECT_BCZBTREE WHERE PID = '-1') A
        WHERE B.PID = A.ID)
        SELECT to_char(D.rksj, 'yyyymmdd hh24:mi:ss') rksj,
        '' zt,
        D.*,
        (select username from APP_USER where userid = D.userid) username
        FROM APP_OBJECT_BCZBTREE D, C
        WHERE D.PID = C.ID
        AND nvl(D.zt, 0) = 0
        <if test="DEPTID!=null and DEPTID!=''"> and D.deptid=#{DEPTID}</if>
    </select>
    <select id="getProjectByScope_bak" resultType="java.util.HashMap">
      with p as
     (select *
        from app_object_bczbtree
       where id in ( ${scope}))
    select 'PRO_'||a.OKEY OKEY,a.OVALUE,a.OID,p.ID,(select ovalue
          from app_oproperty
         where okey = 'ProjectTitle'
           and oid = p.id) PRO_DXGC
    from app_oproperty a, p where a.oid = p.pid
    </select>
    <select id="getProjectByScope" resultType="java.util.HashMap">
        with p as
        (select *
        from app_object_bczbtree
        where id in ( ${scope}))
        select p.id id,a.*,p.p_projecttitle PRO_DXGC from app_object_bczbtree a,p where a.id = p.pid
    </select>
    <!-- 项目补充指标统计 -->
    <select id="getxmbczbList" resultType="java.util.HashMap">
        <include refid="com.base.baseMapper.pageStart"/>
        select * from(select b.name yq,a.p_bbh bbh, a.p_bm zbbm ,a.p_mc zbmc ,a.pid,sum(p_pc) sycs,sum(p_gcl) zbgclhj 
        from app_zbxx a ,app_yq b where a.oilid = b.id and a.p_mc is not null GROUP BY b.name,a.p_bbh, a.p_bm,a.pid,a.p_mc)where 1=1
        <if test="c1 != null">
            and yq like '%'||#{c1}||'%'
        </if>
        <include refid="com.base.baseMapper.pageEnd"/>
         order by sycs desc
        <if test="sort != null">
            ${sort}
        </if>
    </select>
    
    <!-- 系统补充指标统计 -->
    <select id="getxtbczbList" resultType="java.util.HashMap">
        <include refid="com.base.baseMapper.pageStart"/>
        select d.P_BM,d.P_MC, to_char(d.rksj,'yyyymmdd') rksj,
          dp.dwmc, yq.name yqname 
          from  app_object_dwcbbczb d ,app_yq yq, app_dept dp
        where  d.oilid = yq.id and dp.DWDM = d.deptid and d.p_bm is not null
        <if test="c1 != null">
            and d.P_MC like '%'||#{c1}||'%'
        </if>
        <include refid="com.base.baseMapper.pageEnd"/>
         order by rksj desc
        <if test="sort != null">
            ${sort}
        </if>
    </select>
     <select id="getbczbyyList" resultType="java.util.HashMap">
        <include refid="com.base.baseMapper.pageStart"/>
        select * from(select b.DWMC,a.P_BM,a.P_MC,sum(a.P_PC) sycs,sum(a.P_GCL) zbgclhj from app_zbxx
        a,app_dept b where a.deptid=b.DWDM GROUP BY b.DWMC,a.P_BM,a.P_MC)where 1=1
        <if test="c1 != null">
            and DWMC  like '%'||#{c1}||'%'
        </if>
        <include refid="com.base.baseMapper.pageEnd"/>
         order by sycs desc
        <if test="sort != null">
            ${sort}
        </if>
    </select>
    
    <select id="getZhzbList" resultType="java.util.HashMap">
        <include refid="com.base.baseMapper.pageStart"/>
        select (select username from app_user where userid=w.userid) ry,to_char(rksj,'yyyymmdd hh24:mi:ss') sj,(select name from APP_YQ where bzyqh=oilid) oilname,decode(status,'1','已下发','未下发') zt,w.* from APP_ZB_BCZH w where 1=1
        <if test="dwdm != null">
            and deptid=#{dwdm}
        </if>
        
        <if test="c1 != null">
            and name like '%'||#{c1}||'%'
        </if>
        <include refid="com.base.baseMapper.pageEnd"/>
        order by rksj desc
        <if test="sort != null">
            ${sort}
        </if>
    </select>
    <select id="getJsrList" resultType="java.util.HashMap">
        select t.*
          from app_user t, sys_userrole s, v_office w
         where t.userid = s.userid
           and s.roleid = w.id
           <if test="dwdm!=null and dwdm!=''">
               and substr(w.code, 1, 4) = #{dwdm}
           </if>
    </select>

    <select id="getBczbByFz_bak"  resultType="java.util.HashMap">

        with p as
             (select a.* from APP_OBJECT_BCZBTREE a,APP_ZB_BCRALATION t where a.id=t.bczbid <if test="c1!=null and c1!=''"> and t.zhzbid=#{c1}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj
        from app_oproperty a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'

    </select>
    <select id="getBczbByFz"  resultType="java.util.HashMap">
        with p as
        (select a.*,(select username from APP_USER where userid=a.userid) username from APP_OBJECT_BCZBTREE a,APP_ZB_BCRALATION t where a.id=t.bczbid <if test="c1!=null and c1!=''"> and t.zhzbid=#{c1}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*
        from p
    </select>
    <select id="getZbByFz" resultType="java.util.HashMap">
        select a.*,(select pid from APP_OBJECT_BCZBTREE where
        id=(select pid from APP_OBJECT_BCZBTREE where id=a.bczbid)) info from APP_ZB_BCRALATION a where zhzbid=#{c1}
    </select>
    <select id="getBczbTreeById2" resultType="java.util.LinkedHashMap">
        select *
              from (select a.*, decode(level, 1, '1', 2, '1', 3, id, id) flag
                      from (select a.*, b.ovalue oder
                              from APP_OBJECT_BCZBTREE a
                              left join (select * from APP_OPROPERTY where okey = 'ID') b
                                on a.id = b.oid) a

                    connect by prior id = pid
                     start with id = #{rootId}
                     order siblings by oder)
             where flag = '1'
                or flag in (${scope})
            union
            select *
              from (select a.*, id flag
                      from (select a.*, b.ovalue oder
                              from APP_OBJECT_BCZBTREE a
                              left join (select * from APP_OPROPERTY where okey = 'ID') b
                                on a.id = b.oid) a
                    connect by prior id = pid
                     start with id in (${scope})
                     order siblings by oder)

    </select>
    <select id="getBczbProperty2" resultType="java.util.LinkedHashMap">
        with b as (select id
                  from (select id, decode(level, 1, '1', 2, '1', 3, id, id) flag
                          from APP_OBJECT_BCZBTREE a
                        connect by prior id = pid
                         start with id = #{rootId})
                 where flag = '1'
                    or flag in (${scope})
                union
                select id
                  from (select id, id flag
                          from APP_OBJECT_BCZBTREE a
                        connect by prior id = pid
                         start with id in (${scope}))
                )
            select oid,
                   decode(okey, 'text', '#', '@') || okey okey,
                   nvl(ovalue, '') ovalue
              from APP_OPROPERTY a,b where a.oid=b.id
    </select>
    <select id="getBczbByMl" resultType="java.util.HashMap">
        with p as
        (select a.* from APP_OBJECT_DWCBBCZB a,APP_ZB_MLRALATION t where a.id=t.bczbid <if test="c1!=null and c1!=''"> and t.zhzbid=#{c1}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj
        from app_oproperty_dwcbbczb a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'
    </select>
    <select id="getDwBczb_bak"   resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*
                from APP_OBJECT_DWCBBCZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,p.oilid,
        (select name from app_yq where bzyqh=p.OILID) yqname
        from app_oproperty_dwcbbczb a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'
    </select>
    <select id="getDwBczb"   resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*
                from APP_OBJECT_DWCBBCZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,p.oilid,
        (select name from app_yq where bzyqh=p.OILID) yqname,'' zt,p.*
        from p where 1=1
        <if test="c1 != null">
            and P_MC = #{c1}
        </if>
    </select>
    <select id="getYhBczb_bak"  resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_YHBCZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,p.username
        from app_oproperty_yhbczb a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'
    </select>
    <select id="getYhBczb"  resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_YHBCZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*
        from p
    </select>
    <select id="getYhBczbTreeById_bak" resultType="java.util.LinkedHashMap">
        select * from (select a.*,b.ovalue oder from APP_OBJECT_YHBCZB a left join
         (select * from APP_OPROPERTY_YHBCZB where okey='ID') b on a.id=b.oid )
         connect by prior id=pid start with id=#{bczbid}
        order siblings by oder
    </select>
    <select id="getYhBczbTreeById" resultType="java.util.LinkedHashMap">
        select * from APP_OBJECT_YHBCZB connect by prior id=pid start with id=#{bczbid}
        order siblings by p_id
    </select>
    <select id="getYhBczbProperty" resultType="java.util.LinkedHashMap">
        with b as (select id
                 from APP_OBJECT_YHBCZB
               connect by prior id = pid
                start with id = #{bczbid})
            select oid,
                   decode(okey, 'text', '#', '@') || okey okey,
                   nvl(ovalue, '') ovalue
              from APP_OPROPERTY_YHBCZB a,b where a.oid=b.id
    </select>
    <select id="getZbByServerId_bak" resultType="java.util.HashMap">
        select * from APP_OPROPERTY_YHBCZB where okey='SERVERID' and ovalue in ${SCOPE}
    </select>
    <select id="getZbByServerId" resultType="java.util.HashMap">
        select * from APP_OBJECT_YHBCZB where p_serverid in ${SCOPE}
    </select>
    <select id="getDwBczbTreeById_bak" resultType="java.util.LinkedHashMap">
        select * from (select a.*,b.ovalue oder from APP_OBJECT_DWCBBCZB a left join
         (select * from APP_OPROPERTY_DWCBBCZB where okey='ID') b on a.id=b.oid )
         connect by prior id=pid start with id=#{bczbid}
        order siblings by oder
    </select>
    <select id="getDwBczbTreeById" resultType="java.util.LinkedHashMap">
        select * from APP_OBJECT_DWCBBCZB
        connect by prior id=pid start with id=#{bczbid}
        order siblings by p_id
    </select>

    <select id="getDwBczbProperty" resultType="java.util.LinkedHashMap">
        with b as (select id
                 from APP_OBJECT_DWCBBCZB
               connect by prior id = pid
                start with id = #{bczbid})
            select oid,
                   decode(okey, 'text', '#', '@') || okey okey,
                   nvl(ovalue, '') ovalue
              from APP_OPROPERTY_DWCBBCZB a,b where a.oid=b.id
    </select>
    <select id="getDwZbByServerId" resultType="java.util.HashMap">
        select * from APP_OPROPERTY_DWCBBCZB where okey='SERVERID' and ovalue in ${SCOPE}
    </select>
    <select id="getBcsbzcList" resultType="java.util.HashMap">
        select t.*,(select name from app_yq where bzyqh=t.OILID) yqname from APP_SBZC_BC t,
        app_sbzc_mlralation s where t.id=s.bcid and t.bbh=#{c11} and t.bbh=s.bbh
        <if test="c1 != null">
            and s.zhid=#{c1}
        </if>
        order by t.rksj desc
    </select>
    <select id="getBcsbzcByMl" resultType="java.util.HashMap">
        select a.* from APP_SBZC_BC a,APP_SBZC_MLRALATION  b
        where a.id=b.bcid and a.bbh=b.bbh and a.bbh=#{c11} <if test="c1!=null and c1!=''"> and b.zhid=#{c1} </if>
    </select>
    <select id="getBczbRootByCode" resultType="java.lang.String">
        select id from sys_office where  substr(code,1,4)=#{CODE}
                and substr(code, 7, 8) = '03'
                and length(code) = 8
                      and type = 2
    </select>
    <select id="getDwBczbByDw_bak" resultType="java.util.HashMap">
        with ml as
         (select level grade, a.*
            from SYS_OFFICE a
          connect by prior id = PARENT_ID
           start with length(code) = 8
                  and type = 2
                  and substr(code, 1, 4) = #{CODE}
                  and substr(code, 7, 8) = '03')
        select t.id,t.zhzbid,t.bczbid,t.code,t.rksj,
               (select ovalue
                  from app_oproperty_dwcbbczb
                 where oid = t.bczbid
                   and okey = 'ZHDJ') zhdj,oilid
          from APP_ZB_MLRALATION t, ml s
         where t.zhzbid = s.id
         order by rksj, bczbid, zhzbid
    </select>
    <select id="getDwBczbByDw" resultType="java.util.HashMap">
        with ml as
        (select level grade, a.*
        from SYS_OFFICE a
        connect by prior id = PARENT_ID
        start with length(code) = 8
        and type = 2
        and substr(code, 1, 4) = #{CODE}
        and substr(code, 7, 8) = '03')
        select t.id,t.zhzbid,t.bczbid,t.code,t.rksj,
        (select p_zhdj
        from app_object_dwcbbczb
        where id = t.bczbid) zhdj,oilid
        from APP_ZB_MLRALATION t, ml s
        where t.zhzbid = s.id
        order by rksj, bczbid, zhzbid
    </select>
    <select id="getBcsbzcByDw" resultType="java.util.HashMap">
        with ml as
         (select level grade, a.*
            from (select * from APP_SBZC_ML where bbh=#{BBH}) a
          connect by prior id = PARENT_ID
           start with length(code) = 8
                  and type = 2
                  and substr(code, 1, 4) = #{CODE}
                  and substr(code, 7, 8) = '04')
        select sk.*,t.code,t.zhid
          from APP_SBZC_BC sk,APP_SBZC_MLRALATION t, ml s
         where t.zhid = s.id and sk.id=t.bcid and sk.bbh=#{BBH} and sk.bbh=t.bbh
         order by sk.rksj, t.bcid, t.zhid
    </select>
    <select id="getBcSbzcRootByCode" resultType="java.lang.String">
        select id from APP_SBZC_ML where  substr(code,1,4)=#{CODE}
                and substr(code, 7, 8) = '04'
                and length(code) = 8
                      and type = 2
                      and bbh=#{BBH}
    </select>
    <select id="getYsBczbXf_bak" resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_BCZBTREE t
               where level = 3]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,username,y.name fzmc,(select username from app_user where userid=y.userid) xfry
        from app_oproperty a, p, d,APP_ZB_BCRALATION z,APP_ZB_BCZH y
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'
        and a.oid=z.bczbid and z.zhzbid=y.id
        and y.status='1'

    </select>
    <select id="getYsBczbXf" resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_BCZBTREE t
               where level = 3]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*,y.name fzmc,(select username from app_user where userid=y.userid) xfry
        from p,APP_ZB_BCRALATION z,APP_ZB_BCZH y
        where p.id=z.bczbid and z.zhzbid=y.id
        and y.status='1'

    </select>
    <select id="getDwElfByDw" resultType="java.util.HashMap">
        with ml as
         (select level grade, a.*
            from SYS_OFFICE a
          connect by prior id = PARENT_ID
           start with length(code) = 8
                  and type = 2
                  and substr(code, 1, 4) = #{CODE}
                  and substr(code, 7, 8) = '05')
        select t.id,t.zhzbid,t.bczbid,t.code,t.rksj
          from APP_ELF_MLRALATION t, ml s
         where t.zhzbid = s.id
         order by rksj, bczbid, zhzbid
    </select>
    <select id="getDwBcelf" resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*
                from APP_OBJECT_YHBCELF t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> ),
        d as
        (select * from APP_OBJECTDIC)
        select a.*,p.pid,to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj
        from app_oproperty_yhbcelf a, p, d
        where a.oid = p.id
        and p.otype = d.otype
        and d.okey = a.okey
        and display1 = '1'
    </select>
    <select id="getDwQdByDw" resultType="java.util.HashMap">
        with ml as
         (select level grade, a.*
            from SYS_OFFICE a
          connect by prior id = PARENT_ID
           start with length(code) = 8
                  and type = 2
                  and substr(code, 1, 4) = #{CODE}
                  and substr(code, 7, 8) = '06')
        select t.id,t.zhzbid,t.bczbid,t.code,t.rksj
          from APP_QD_MLRALATION t, ml s
         where t.zhzbid = s.id
         order by rksj, bczbid, zhzbid
    </select>
    <select id="getDwBcgcf" resultType="java.util.HashMap">
        <![CDATA[
            with p as
                 (select t.*
                    from APP_OBJECT_GCF t
                   where level = 1
                     and nvl(zt, 0) =0 ]]>
            connect by prior id = pid
            start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
            select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*
            from p
    </select>
    <select id="getDwGcfByDw" resultType="java.util.HashMap">
        with ml as
         (select level grade, a.*
            from SYS_OFFICE a
          connect by prior id = PARENT_ID
           start with length(code) = 8
                  and type = 2
                  and substr(code, 1, 4) = #{CODE}
                  and substr(code, 7, 8) = '07')
        select t.id,t.zhzbid,t.bczbid,t.code,t.rksj
          from APP_GCF_MLRALATION t, ml s
         where t.zhzbid = s.id
         order by rksj, bczbid, zhzbid
    </select>
    <select id="getDic" resultType="java.util.HashMap">
        select * from APP_OBJECTDIC2
    </select>
    <select id="getYhBczbzx" resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*,(select username from APP_USER where userid=t.userid) username
                from APP_OBJECT_YHBCZXZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,'' zt,p.*
        from p
    </select>
    <select id="getZbzxByServerId" resultType="java.util.HashMap">
        select * from APP_OBJECT_YHBCZXZB where p_serverid in ${SCOPE}
    </select>
    <select id="getZxBczb" resultType="java.util.HashMap">
        <![CDATA[
        with p as
             (select t.*
                from APP_OBJECT_ZXCBBCZB t
               where level = 1
                 and nvl(zt, 0) =0 ]]>
        connect by prior id = pid
        start with pid = '-1' <if test="DEPTID!=null and DEPTID!=''"> and deptid=#{DEPTID}</if> )
        select to_char(p.rksj,'yyyymmdd hh24:mi:ss') rksj,p.oilid,
        (select name from app_yq where bzyqh=p.OILID) yqname,'' zt,p.*
        from p
    </select>
</mapper>